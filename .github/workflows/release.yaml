name: Release new UserScript version

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v4
        with:
          path: ./
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Build UserScript
        run: npm run build
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ./dist/thermometer.user.js
  release:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: write
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: ./build/
      - name: Create draft release and upload build artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const path = require('node:path');
            const fs = require('node:fs/promises');

            const release = await github.rest.repos.createRelease({
              ... context.repo,
              name: `Thermometer ${{ github.ref_name }}`,
              draft: true,
              tag_name: `${{ github.ref_name }}`,
              generate_release_notes: true
            });

            console.log('Draft release created:', release.data.html_url);

            const BUILDS_DIR = './build/';

            for (const fileName of await fs.readdir(BUILDS_DIR)) {
              const filePath = path.join(BUILDS_DIR, fileName);

              await github.rest.repos.uploadReleaseAsset({
                ... context.repo,
                release_id: release.data.id,
                name: fileName,
                data: await fs.readFile(filePath)
              });

              console.log(`Asset "${fileName}" uploaded to draft release`);
            }

            await github.rest.repos.updateRelease({
              ... context.repo,
              release_id: release.data.id,
              draft: false
            });

            console.log('Published release!', release.data.html_url);
